#summary This page explains how to build the application.
#labels Featured,Phase-Implementation

= Introduction =
The application has two distinct parts : 
 * The pjsip dynamic library part that produce a .so (to be more precise a .so by android target).
 * The java application that produce a .apk (and can be installed on your android device).

Due to the fact the dynamic library has to be recompiled for each android target (the ndk doesn't support audio library yet), by default the application apk will download the .so from the csipsimple website.
Although, if you want to make your own builds, there is a simple way to use your own .so builds. (See the *Build the android application* section for more details).

*Important : * If you are a java developer and you are not interested in building the sip stack, you can directly go to the *Build the android application* section.


= System and Software Requirements =
I assume that you have a linux system with svn and all android ndk requirements.


Create a new directory for the project.

= Build the pjsip library for android =

I have not committed into the svn the compiler, linker etc for android. So you'll have to get them from the official ndk and then to include them into the project.

 * First of all get the ndk and unzip
{{{
wget http://dl.google.com/android/ndk/android-ndk-r3-linux-x86.zip
unzip android-ndk-r3-linux-x86.zip
rm android-ndk-r3-linux-x86.zip
}}}

 * Then checkout the pjsip part of the project :
{{{
svn checkout http://csipsimple.googlecode.com/svn/trunk/pjsip_android pjsip_android
}}}

 * Now we have to add the ndk toolchains into the pjsip_android project ndk.
{{{
cp -r android-ndk-r3/build/prebuilt pjsip_android/build/
}}}
_ Note : You can now delete the android-ndk-r3 folder _


 * Go into the pjsip_android directory and initialize the ndk:
{{{
cd pjsip_android
./build/host-setup.sh
}}}

 * And now you have two options.
   * Launch a make (but it will generate only one target lib)
{{{
make APP=pjsip APP_PLATFORM=android-4
}}}
     _(you can replace android-4 by the target you want to build for)_
   * Launch a shell script I wrote that will automatically make all targets for you.
{{{
./build_release.sh
}}}

Congratulation you've just build the dynamic library.
You can find your build under 
{{{
apps/pjsip/project/libs/armeabi/android-4
}}}

_* Note :* You can list currently available target using : _
{{{
ls build/platforms/
}}}


= Build the android application =
From the android sdk point of view, the application is a standard android application.

So you can use eclipse.
Checkout the csipsimple directory (under trunk) from the source. (You can use [http://subclipse.tigris.org/ Subclipse] to checkout directly into Eclipse.

 * If you have build the pjsip library, copy the .so generated by the build in the directory : `libs/armeabi/libpjsipjni.so` of the android project.
 * Else the library will be automatically downloaded from internet at first run (and put into the files/ directory of the package on the device).


= Important informations =
If you want to use the emulator to run your application, you have to be sure you are using the corresponding .so.
(I'm not sure, but I think that the underlying libmedia version of the sdk emulator doesn't vary with the target version you choose). _(I mean : the java library version and the native library version can differ)_
